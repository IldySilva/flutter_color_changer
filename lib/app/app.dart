import 'package:flutter/material.dart';
import 'package:flutter_color_changer/app/app_controller.dart';
import 'package:flutter_color_changer/app/consts.dart';

/// The [App] class  is the  entry point for the application,
class App extends StatefulWidget {
  @override
  State<App> createState() => _AppState();
}

class _AppState extends State<App> with TickerProviderStateMixin {
  final AppController _controller = AppController();

  @override
  void initState() {
    _controller.animationController = AnimationController(
      vsync: this,
      duration: defaultAnimationDuration,
    );
    super.initState();
  }

  @override
  void dispose() {
    _controller.colorChangeTimer?.cancel();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Flutter Cool Color Change',
      home: ListenableBuilder(
        builder: (context, state) {
          return Scaffold(
            bottomNavigationBar: AnimatedContainer(
              color: _controller.currentBackgroundColor,
              duration: defaultAnimationDuration,
              child: SizedBox(
                height: 30,
                child: Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      Text(
                        "By IldySilva",
                        style: TextStyle(
                          color: _controller.contrastTextColor.withAlpha(100),
                          fontSize: 10,
                        ),
                      ),
                      Text(
                        _controller.rgbValue,
                        style: TextStyle(
                          color: _controller.contrastTextColor.withAlpha(100),
                          fontSize: 10,
                        ),
                      ),
                      Row(
                        children: [
                          Text(
                            "Change Auto",
                            style: TextStyle(
                              color:
                                  _controller.contrastTextColor.withAlpha(100),
                              fontSize: 10,
                            ),
                          ),
                          Transform.scale(
                            scale: 0.5, // half of native widget size
                            child: Switch(
                              value: _controller.autoGenerated,
                              onChanged: (v) =>
                                  _controller.toggleAutoGenerate(),
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                ),
              ),
            ),
            body: GestureDetector(
              onTapDown: (details) =>
                  _controller.startClickEffect(details.localPosition),
              child: Stack(
                children: [
                  AnimatedContainer(
                    key: const ValueKey('backgroundKey'),
                    color: _controller.currentBackgroundColor,
                    duration: defaultAnimationDuration,
                    child: Center(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          Text(
                            "Hello There",
                            style: TextStyle(
                              color: _controller.contrastTextColor,
                              fontSize: 24,
                            ),
                          ),
                        ],
                      ),
                    ),
                  ),
                  if (_controller.showEffect &&
                      _controller.clickPosition != null)
                    Positioned(
                      left: _controller.clickPosition!.dx - 5,
                      top: _controller.clickPosition!.dy - 5,
                      child: AnimatedBuilder(
                        animation: _controller.animationController,
                        builder: (context, child) {
                          return Container(
                            width: 60 * _controller.animationController.value,
                            height: 60 * _controller.animationController.value,
                            decoration: BoxDecoration(
                              shape: BoxShape.circle,
                              color: _controller.currentBackgroundColor
                                  .withOpacity(
                                1.0 - _controller.animationController.value,
                              ),
                            ),
                          );
                        },
                      ),
                    ),
                ],
              ),
            ),
          );
        },
        listenable: _controller,
      ),
    );
  }
}
